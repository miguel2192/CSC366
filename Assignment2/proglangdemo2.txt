%% file: proglang.pro
%% line: some knowledge about programming languages

% language(L) means L is a programming language

?- swipl

Welcome to SWI-Prolog (Multi-threaded, 64 bits, Version 7.2.3)
Copyright (c) 1990-2015 University of Amsterdam, VU Amsterdam
SWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software,
and you are welcome to redistribute it under certain conditions.
Please visit http://www.swi-prolog.org for details.

For help, use ?- help(Topic). or ?- apropos(Word).

?- consult('proglang.pro')

?- language(pascal).

?- language(prolog).

?- language(X).

?- language(L).
L = smalltalk,
L = lisp 

?- language(Language),write(Language), nl, fail.
smalltalk
lisp
prolog


?- essence(lisp,DT,CF)
DT = lists,
CF = 'recursive functions'.

Yes
?- essence(prolog,DT,_)
DT = relations
Yes
?- essence(prolog,_,CF)
CF = 'logical inferencing'
Yes

?- essence(L,objects,_).
L = smalltalk.
Yes

?- history(Lisp,lisp,I,_).
I = inventor('John McCarthy').

?- history(lisp,inventor(name,_).
Name = 'John McCarthy'.

?- history(_,inventor(N),_),nl,fail.
Alan Kay
John McCarthy
Alan Colmeraur

?- halt.

